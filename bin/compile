#!/bin/bash

# https://devcenter.heroku.com/articles/buildpack-api
# Gets called like this:
#   bin/compile BUILD_DIR CACHE_DIR ENV_DIR

build_dir="$1" # location of the Heroku app
cache_dir="$2" # persisted between builds
env_dir="$3"   # a directory that contains a file for each of the applicationâ€™s configuration variables (I assume the ones from `heroku config:set a=b`)

# "Buildpack developers are encouraged to match the Heroku push style when displaying output."
#    -- https://devcenter.heroku.com/articles/buildpack-api
function say {
  if test "$#" -eq 0
  then
    return
  fi

  echo "-----> $1"
  shift

  for line in "$@"
  do
    echo "       $line"
  done
}

say "Working in $(pwd)"


# ===== CMAKE =====
# Homepage: http://www.cmake.org/download/
# This is derived from https://github.com/Homebrew/homebrew/blob/38f112f25e9ab919465a19dbe5e70cf5abcf7e05/Library/Formula/cmake.rb

# Ideally could use these, but can't figure out how to just get that one ver at that one sha
# so going with curl instead.
#
# head 'http://cmake.org/cmake.git'
# sha1 'b7e4acaa7fc7adf54c1b465c712e5ea473b8b74f'

# # Try compiling from source
# say "Curling cmake from http://www.cmake.org/files/v3.0/cmake-3.0.1.tar.gz"
# curl 'http://www.cmake.org/files/v3.0/cmake-3.0.1.tar.gz' > "cmake-3.0.1.tar.gz"
#
# say 'Extracting cmake'
# tar -xf "cmake-3.0.1.tar.gz"
#
# say 'Running bootstrap'
# cd "cmake-3.0.1"
# ./bootstrap
#
# say 'Making it'
# make
# cd ..

# Try downloading the cmake binary
say "Curling cmake from http://www.cmake.org/files/v3.0/cmake-3.0.2-Linux-i386.tar.gz"
curl "http://www.cmake.org/files/v3.0/cmake-3.0.2-Linux-i386.tar.gz" > "cmake-3.0.2.tar.gz"
tar -xf "cmake-3.0.2.tar.gz"

# Uncomment this to find binaries:
# say "Here are all the executable files:"
# find . -type f -perm +111

# Move binaries directly into our app's binary (IDK if non-ruby libs have this setup, but it's the only apparent option to me w/o forking every other fucking buildpack -- see comment in bin/release for more info)
app_bin="$build_dir/bin"
mkdir -p "$app_bin"

cmake_bin="./cmake-3.0.2-Linux-i386"
for program in `ls $cmake_bin/bin`
do
  to_location="$app_bin/$program"
  from_location="$cmake_bin/$program"
  say "Copying '$from_location' to '$to_location'"
  cp "$from_location" "$to_location"
done

# TODO:
#   Run this in cache dir?
#   Then can check if I've done it before repeating my work

# args = %W[
#   --prefix=#{prefix}
#   --system-libs
#   --no-system-libarchive
#   --datadir=/share/cmake
#   --docdir=/share/doc/cmake
#   --mandir=/share/man
# ]

# ===== PKG-CONFIG =====
# Homepage: http://pkgconfig.freedesktop.org
# This is derived from https://github.com/Homebrew/homebrew/blob/45e07c0e85c89583c675632ed3fb7da1a32a4180/Library/Formula/pkg-config.rb

# say "Curling pkg-config from http://pkgconfig.freedesktop.org/releases/pkg-config-0.28.tar.gz"
# curl "http://pkgconfig.freedesktop.org/releases/pkg-config-0.28.tar.gz" > pkg-config-0.28.tar.gz
# tar -xf "pkg-config-0.28.tar.gz"
# cd "pkg-config-0.28"
# make
# make check
# cd ..
